= C++ DBI style database interface

dbic++ is a Perl DBI style database client library abstraction which comes with support for
the following databases.

* PostgreSQL >= 8.0

I'm working on drivers for the following, which will be available soon.

* MySQL  >= 5.0
* SQLite >= 3

== Examples

=== C++

  #include "dbic++.h"

  using namespace std;
  using namespace dbi;

  int main() {
      // Handle h ("driver", "user", "password", "database", "host", "port");
      Handle h ("postgresql", "udbicpp", "", "dbicpp");
      Statement st (h, "SELECT id, name, email FROM users WHERE id >= ? AND id < ?");

      // bind and execute the statement.
      st % 1L, 10L;
      st.execute();
      ResultRow r;
      while ((r = st.fetchRow()).size() > 0) {
          cout << r.join("\t") << endl;
      }
      st.finish();
  }

See src/example.cc for more specific examples.

=== Ruby

  require 'dbicpp'

  h = DBI::Handle.new user: "udbicpp", driver: "postgresql", database: "dbicpp"

  st = h.prepare "SELECT name, email FROM users where id > ? AND id < ?"

  st.execute(0, 10) do |row|
    puts row["name"]
    puts row["email"]
  end

  # Named save point.
  h.transaction 'delete_stuff' do
    h.execute "DELETE FROM users WHERE id = ?", 2
    begin
      # UUID save point.
      h.transaction do
        h.execute "DELETE FROM users"
        raise "changed my mind"
      end
    rescue => e
      # nop
    end
  end


== TODO

=== Database Features

* CURSOR, function calls, async queries, result iterators and a lot more.

=== Distribution

* automake and configure files for libs.
* deb specs and packages for base and driver libs.
* proper extconf.rb and gemspec for ruby bindings.

== LICENSE

See LICENSE.

== Warning

I'm no C++ or Ruby expert. So the code may have horrendous, hideous or outdated code/coding style. If
you are lucky, you may not encounter any bugs. So suffice to say, if you have any comments,
suggestions or patches they're very much welcome.

The project is under heavy development and is not production ready. Use it at your own risk.
